OpenLayers.Control.ExportMap=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,canvasComponents:[],tileData:{},trigger:function(a){return this.setUpCanvas(a),this.canvasComponents=[],this.tileData={},Object.size=function(a){var b=0;for(var c in a)a.hasOwnProperty(c)&&b++;return b},this.map.layers.forEach(function(a){a.visibility&&(a instanceof OpenLayers.Layer.Vector?this.exportVectorLayer(a):a instanceof OpenLayers.Layer.Grid&&this.exportGridLayer(a))}.bind(this)),this.canvas},setUpCanvas:function(a){void 0===a?this.canvas=document.createElement("canvas"):this.canvas=a,this.canvasContext=this.canvas.getContext("2d"),this.canvas.width=this.map.viewPortDiv.clientWidth,this.canvas.height=this.map.viewPortDiv.clientHeight},exportVectorLayer:function(a){if(a.renderer instanceof OpenLayers.Renderer.Canvas){var b=a.renderer;if(null!==b.canvas){var c=b.canvas;this.canvasComponents.push(c.canvas)}}},exportGridLayer:function(a){this.offsetX=parseInt(this.map.layerContainerDiv.style.left),this.offsetY=parseInt(this.map.layerContainerDiv.style.top),this.stitchTiles(a)},stitchTiles:function(a){var b=this;a.grid.forEach(function(c){c.forEach(function(c){var d=a.getURL(c.bounds);b.tileData[d]||(b.tileData[d]={x:c.position.x+b.offsetX,y:c.position.y+b.offsetY}),b.loadImage(d)})})},loadImage:function(a){var b=new Image,c=this;b.onload=function(){var a=c.canvasComponents;if(a.unshift(this),a.length>=Object.size(c.tileData))for(var b in a){var d=a[b];if(d.toString().indexOf("HTMLCanvasElement")>-1)c.drawCanvasComponent(d,0,0);else{var e=c.tileData[d.src];c.drawCanvasComponent(d,e.x,e.y)}}},b.src=a},drawCanvasComponent:function(a,b,c){this.canvasContext.drawImage(a,b,c)},CLASS_NAME:"OpenLayers.Control.ExportMap"});